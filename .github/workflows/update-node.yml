name: Update Node
on:
  push:
    branches: main
    paths: .github/workflows/update-node.yml
  schedule:
    - cron: '0 15 * * *'
permissions:
  contents: write
concurrency: update-node
jobs:
  update-node:
    name: Update Node
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          persist-credentials: false
      - name: Determine version
        id: node-version
        run: |
          OLD_VERSION=$(<.nvmrc)
          NEW_VERSION=$(curl -sSf https://resolve-node.vercel.app/lts)
          NEW_VERSION=${NEW_VERSION#'v'}
          echo "::set-output name=new::$NEW_VERSION"
          echo "::set-output name=old::$OLD_VERSION"
      - name: Update .nvmrc
        run: echo ${{steps.node-version.outputs.new}} > .nvmrc
      - name: Check for changes
        id: changes
        run: git diff --exit-code .nvmrc || echo '::set-output name=exist::true'
      - name: Push commit
        if: steps.changes.outputs.exist
        run: |
          git config user.name ${{secrets.AUTOMATION_USER}}
          git config user.email ${{secrets.AUTOMATION_EMAIL}}
          git add .nvmrc
          git commit -m "chore(node): bump from $OLD_VERSION to $NEW_VERSION"
          CREDENTIALS="x-access-token:${{secrets.AUTOMATION_TOKEN}}"
          URL="https://$CREDENTIALS@github.com/${{github.repository}}.git"
          git remote set-url origin $URL
          git push origin main
        env:
          NEW_VERSION: ${{steps.node-version.outputs.new}}
          OLD_VERSION: ${{steps.node-version.outputs.old}}
