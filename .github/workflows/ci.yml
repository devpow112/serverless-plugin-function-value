name: CI
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Get node version
        id: node
        run: echo "::set-output name=version::$(cat .nvmrc)"
      - name: Set up node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{steps.node.outputs.version}}
      - name: Set up cache
        uses: actions/cache@v2.1.4
        id: cache
        with:
          path: '**/node_modules'
          key: npm-${{hashFiles('**/package-lock.json')}}
      - name: Install packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run lint (JavaScript)
        run: npm run lint:js
      - name: Run lint (Markdown)
        run: npm run lint:md
      - name: Run lint (Git)
        run: npm run lint:git
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Get node version
        id: node
        run: echo "::set-output name=version::$(cat .nvmrc)"
      - name: Set up node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{steps.node.outputs.version}}
      - name: Set up cache
        uses: actions/cache@v2.1.4
        id: cache
        with:
          path: '**/node_modules'
          key: npm-${{hashFiles('**/package-lock.json')}}
      - name: Install packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run tests (unit)
        run:  npm run test:unit
      - name: Report coverage
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{github.token}}
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Get node version
        id: node
        run: echo "::set-output name=version::$(cat .nvmrc)"
      - name: Set up node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{steps.node.outputs.version}}
      - name: Set up cache
        uses: actions/cache@v2.1.4
        id: cache
        with:
          path: '**/node_modules'
          key: npm-${{hashFiles('**/package-lock.json')}}
      - name: Install packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run build
        run: npm run build
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: javascript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
