name: Release
on:
  schedule:
    - cron: '0 19 * * *'
  workflow_run:
    workflows: CI
    branches: main
    types: completed
permissions:
  contents: read
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: >
      (
        github.event_name == 'schedule' &&
        !startsWith(github.event.head_commit.message, 'chore(release):') &&
        !startsWith(github.event.head_commit.message, 'chore(license):') &&
        !startsWith(github.event.head_commit.message, 'chore(node):')
      ) || (
        github.event_name == 'workflow_run' &&
        github.event.workflow_run.conclusion == 'success' && (
          startsWith(github.event.workflow_run.head_commit.message, 'fix') ||
          startsWith(github.event.workflow_run.head_commit.message, 'Revert')
        )
      )
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          persist-credentials: false
      - name: Get node version
        id: node
        run: echo "::set-output name=version::$(cat .nvmrc)"
      - name: Set up node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{steps.node.outputs.version}}
      - name: Set up cache
        uses: actions/cache@v2.1.5
        id: cache
        with:
          path: '**/node_modules'
          key: npm-${{hashFiles('**/package-lock.json')}}
      - name: Install packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run build
        run: npm run build
      - name: Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{secrets.SEMANTIC_RELEASE_TOKEN}}
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
